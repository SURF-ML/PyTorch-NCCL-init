#!/bin/bash
#SBATCH --job-name=launch
#SBATCH --nodes=2
#SBATCH --ntasks-per-node=4
#SBATCH --time=20:00
#SBATCH --gpus-per-node=4
#SBATCH --partition=gpu_h100

# Usage: sbatch script.sh [DEBUG_FLAG] [OUTPUT_DIR]
#    or: salloc ... script.sh [OUTPUT_DIR]

DEBUG_FLAG=${1}
OUTPUT_DIR=${2:-"default"}
FLAGS=("ALL", "INIT" "COLL" "P2P" "SHM" "NET" "GRAPH" "TUNING" "ENV" "ALLOC" "CALL" "PROXY" "NVLS" "BOOTSTRAP" "REG" "PROFILE" "RAS")

mkdir -p logs/${OUTPUT_DIR}

# Setup master node
nodes=( $( scontrol show hostnames $SLURM_JOB_NODELIST ) )
head_node_ip=$(srun --nodes=1 --ntasks=1 -w "${nodes[0]}" hostname --ip-address)
export MASTER_ADDR=$head_node_ip
export MASTER_PORT=12345
export WORLD_SIZE=$((SLURM_JOB_NUM_NODES * SLURM_GPUS_PER_NODE))

run_flag() {
    local flag=$1
    echo "Running NCCL_DEBUG_SUBSYS=$flag"
    
    srun --label --gpus-per-node=4 --ntasks-per-node=4 --nodes=2 \
         --output=logs/${OUTPUT_DIR}/slurm/${flag}-%j.out \
         --error=logs/${OUTPUT_DIR}/slurm/${flag}-%j.err \
         apptainer exec \
         --env NCCL_DEBUG_SUBSYS=$flag \
         --env NCCL_DEBUG_FILE=logs/${OUTPUT_DIR}/nccl_debug_${flag}.log \
         --env MASTER_PORT=$MASTER_PORT \
         --env MASTER_ADDR=$MASTER_ADDR \
         --env WORLD_SIZE=$WORLD_SIZE \
         --env NCCL_SOCKET_IFNAME=eno \
         --nv \
         ngc-pytorch-25-06.sif \
         ./launch.sh
}

if [[ -n "$DEBUG_FLAG" ]]; then
    # single flag
    run_flag "$DEBUG_FLAG"
else
    # all flags sequentially
    for flag in "${FLAGS[@]}"; do
        run_flag "$flag"
    done
fi
